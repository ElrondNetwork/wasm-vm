package elrondapigenerate

import (
	"fmt"
	"os"
)

func rustType(goType string) string {
	if goType == "int32" {
		return "i32"
	}
	if goType == "int64" {
		return "i64"
	}
	return goType
}

func WriteVMHooksRustTrait(out *os.File, eiMetadata *EIMetadata) {
	out.WriteString("// Code generated by elrondapi generator. DO NOT EDIT.\n\n")
	out.WriteString("// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
	out.WriteString("// !!!!!!!!!!!!!!!!!!!!!! AUTO-GENERATED FILE !!!!!!!!!!!!!!!!!!!!!!\n")
	out.WriteString("// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
	out.WriteString("\n")
	out.WriteString("pub trait VMHooks {\n")

	for _, funcMetadata := range eiMetadata.AllFunctions {
		out.WriteString(fmt.Sprintf("    fn %s(", snakeCase(funcMetadata.Name)))
		for argIndex, arg := range funcMetadata.Arguments {
			if argIndex > 0 {
				out.WriteString(", ")
			}
			out.WriteString(fmt.Sprintf("%s: %s", snakeCase(arg.Name), rustType(arg.Type)))
		}
		out.WriteString(")")
		if funcMetadata.Result != nil {
			out.WriteString(fmt.Sprintf(" -> %s", rustType(funcMetadata.Result.Type)))
		}

		out.WriteString(";\n")
	}

	out.WriteString("}\n")
}
