package elrondapigenerate

import (
	"bufio"
	"os"
	"strings"
)

// WriteRustWasmerMeteringHelpers generates code for wasmer_metering_helpers.rs
func WriteRustWasmerMeteringHelpers(out *os.File) {
	out.WriteString(`// Code generated by elrondapi generator. DO NOT EDIT.

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!! AUTO-GENERATED FILE !!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

`)
	out.WriteString("use elrond_exec_service::OpcodeCost;\n")
	out.WriteString("use wasmer::wasmparser::Operator;\n\n")

	readFile, err := os.Open("generate/cmd/input/wasmer2_opcodes.txt")
	if err != nil {
		panic(err)
	}
	defer readFile.Close()

	fileScanner := bufio.NewScanner(readFile)
	fileScanner.Split(bufio.ScanLines)

	var content string
	for fileScanner.Scan() {
		line := fileScanner.Text()
		content += "        Operator::" + line + " { .. } => " + "opcode_cost.opcode_" + strings.ToLower(line) + ",\n"
	}

	out.WriteString("pub fn get_opcode_cost(op: &Operator, opcode_cost: &OpcodeCost) -> u32 {\n")
	out.WriteString("    match op {\n")
	out.WriteString(content)
	out.WriteString("    }\n")
	out.WriteString("}\n")
}
