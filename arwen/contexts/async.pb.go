// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: async.proto

package contexts

import (
	arwen "github.com/ElrondNetwork/arwen-wasm-vm/v1_4/arwen"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SerializableCallType int32

const (
	SerializableCallType_DirectCall             SerializableCallType = 0
	SerializableCallType_AsynchronousCall       SerializableCallType = 1
	SerializableCallType_AsynchronousCallBack   SerializableCallType = 2
	SerializableCallType_ESDTTransferAndExecute SerializableCallType = 3
)

// Enum value maps for SerializableCallType.
var (
	SerializableCallType_name = map[int32]string{
		0: "DirectCall",
		1: "AsynchronousCall",
		2: "AsynchronousCallBack",
		3: "ESDTTransferAndExecute",
	}
	SerializableCallType_value = map[string]int32{
		"DirectCall":             0,
		"AsynchronousCall":       1,
		"AsynchronousCallBack":   2,
		"ESDTTransferAndExecute": 3,
	}
)

func (x SerializableCallType) Enum() *SerializableCallType {
	p := new(SerializableCallType)
	*p = x
	return p
}

func (x SerializableCallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerializableCallType) Descriptor() protoreflect.EnumDescriptor {
	return file_async_proto_enumTypes[0].Descriptor()
}

func (SerializableCallType) Type() protoreflect.EnumType {
	return &file_async_proto_enumTypes[0]
}

func (x SerializableCallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SerializableCallType.Descriptor instead.
func (SerializableCallType) EnumDescriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{0}
}

type SerializableVMOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnData    [][]byte `protobuf:"bytes,1,rep,name=ReturnData,proto3" json:"ReturnData,omitempty"`
	ReturnCode    uint64   `protobuf:"varint,2,opt,name=ReturnCode,proto3" json:"ReturnCode,omitempty"`
	ReturnMessage string   `protobuf:"bytes,3,opt,name=ReturnMessage,proto3" json:"ReturnMessage,omitempty"`
	GasRemaining  uint64   `protobuf:"varint,4,opt,name=GasRemaining,proto3" json:"GasRemaining,omitempty"` // bytes  GasRefund = 5 [(gogoproto.jsontag) = "Value", (gogoproto.casttypewith) = "math/big.Int;github.com/ElrondNetwork/elrond-go-core/data.BigIntCaster"];
}

func (x *SerializableVMOutput) Reset() {
	*x = SerializableVMOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializableVMOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableVMOutput) ProtoMessage() {}

func (x *SerializableVMOutput) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableVMOutput.ProtoReflect.Descriptor instead.
func (*SerializableVMOutput) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{0}
}

func (x *SerializableVMOutput) GetReturnData() [][]byte {
	if x != nil {
		return x.ReturnData
	}
	return nil
}

func (x *SerializableVMOutput) GetReturnCode() uint64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *SerializableVMOutput) GetReturnMessage() string {
	if x != nil {
		return x.ReturnMessage
	}
	return ""
}

func (x *SerializableVMOutput) GetGasRemaining() uint64 {
	if x != nil {
		return x.GasRemaining
	}
	return 0
}

type SerializableOutputTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// bytes Value = 1 [(gogoproto.jsontag) = "Value", (gogoproto.casttypewith) = "math/big.Int;github.com/ElrondNetwork/elrond-go-core/data.BigIntCaster"];
	GasLimit      uint64               `protobuf:"varint,2,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasLocked     uint64               `protobuf:"varint,3,opt,name=GasLocked,proto3" json:"GasLocked,omitempty"`
	Data          []byte               `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	CallType      SerializableCallType `protobuf:"varint,5,opt,name=CallType,proto3,enum=contexts.SerializableCallType" json:"CallType,omitempty"`
	SenderAddress []byte               `protobuf:"bytes,6,opt,name=SenderAddress,proto3" json:"SenderAddress,omitempty"`
}

func (x *SerializableOutputTransfer) Reset() {
	*x = SerializableOutputTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializableOutputTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableOutputTransfer) ProtoMessage() {}

func (x *SerializableOutputTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableOutputTransfer.ProtoReflect.Descriptor instead.
func (*SerializableOutputTransfer) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{1}
}

func (x *SerializableOutputTransfer) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *SerializableOutputTransfer) GetGasLocked() uint64 {
	if x != nil {
		return x.GasLocked
	}
	return 0
}

func (x *SerializableOutputTransfer) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SerializableOutputTransfer) GetCallType() SerializableCallType {
	if x != nil {
		return x.CallType
	}
	return SerializableCallType_DirectCall
}

func (x *SerializableOutputTransfer) GetSenderAddress() []byte {
	if x != nil {
		return x.SenderAddress
	}
	return nil
}

type SerializableStorageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset  []byte `protobuf:"bytes,1,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Written bool   `protobuf:"varint,3,opt,name=Written,proto3" json:"Written,omitempty"`
}

func (x *SerializableStorageUpdate) Reset() {
	*x = SerializableStorageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializableStorageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableStorageUpdate) ProtoMessage() {}

func (x *SerializableStorageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableStorageUpdate.ProtoReflect.Descriptor instead.
func (*SerializableStorageUpdate) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{2}
}

func (x *SerializableStorageUpdate) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *SerializableStorageUpdate) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SerializableStorageUpdate) GetWritten() bool {
	if x != nil {
		return x.Written
	}
	return false
}

type SerializableOutputAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Nonce   uint64 `protobuf:"varint,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	// bytes Balance = 3; [(gogoproto.jsontag) = "Value", (gogoproto.casttypewith) = "math/big.Int;github.com/ElrondNetwork/elrond-go-core/data.BigIntCaster"];
	StorageUpdates      map[string]*SerializableStorageUpdate `protobuf:"bytes,4,rep,name=StorageUpdates,proto3" json:"StorageUpdates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Code                []byte                                `protobuf:"bytes,5,opt,name=Code,proto3" json:"Code,omitempty"`
	CodeMetadata        []byte                                `protobuf:"bytes,6,opt,name=CodeMetadata,proto3" json:"CodeMetadata,omitempty"`
	CodeDeployerAddress []byte                                `protobuf:"bytes,7,opt,name=CodeDeployerAddress,proto3" json:"CodeDeployerAddress,omitempty"`
	// bytes BalanceDelta = 8; [(gogoproto.jsontag) = "Value", (gogoproto.casttypewith) = "math/big.Int;github.com/ElrondNetwork/elrond-go-core/data.BigIntCaster"];
	OutputTransfers []*SerializableOutputTransfer `protobuf:"bytes,9,rep,name=OutputTransfers,proto3" json:"OutputTransfers,omitempty"`
	GasUsed         uint64                        `protobuf:"varint,10,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
}

func (x *SerializableOutputAccount) Reset() {
	*x = SerializableOutputAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializableOutputAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableOutputAccount) ProtoMessage() {}

func (x *SerializableOutputAccount) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableOutputAccount.ProtoReflect.Descriptor instead.
func (*SerializableOutputAccount) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{3}
}

func (x *SerializableOutputAccount) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SerializableOutputAccount) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SerializableOutputAccount) GetStorageUpdates() map[string]*SerializableStorageUpdate {
	if x != nil {
		return x.StorageUpdates
	}
	return nil
}

func (x *SerializableOutputAccount) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *SerializableOutputAccount) GetCodeMetadata() []byte {
	if x != nil {
		return x.CodeMetadata
	}
	return nil
}

func (x *SerializableOutputAccount) GetCodeDeployerAddress() []byte {
	if x != nil {
		return x.CodeDeployerAddress
	}
	return nil
}

func (x *SerializableOutputAccount) GetOutputTransfers() []*SerializableOutputTransfer {
	if x != nil {
		return x.OutputTransfers
	}
	return nil
}

func (x *SerializableOutputAccount) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

type SerializableLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier []byte   `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
	Address    []byte   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Topics     [][]byte `protobuf:"bytes,3,rep,name=Topics,proto3" json:"Topics,omitempty"`
	Data       []byte   `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *SerializableLogEntry) Reset() {
	*x = SerializableLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializableLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableLogEntry) ProtoMessage() {}

func (x *SerializableLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableLogEntry.ProtoReflect.Descriptor instead.
func (*SerializableLogEntry) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{4}
}

func (x *SerializableLogEntry) GetIdentifier() []byte {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *SerializableLogEntry) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SerializableLogEntry) GetTopics() [][]byte {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *SerializableLogEntry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SerializableAsyncContextProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                      []byte                                `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	CallID                       []byte                                `protobuf:"bytes,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
	CallType                     SerializableCallType                  `protobuf:"varint,3,opt,name=CallType,proto3,enum=contexts.SerializableCallType" json:"CallType,omitempty"`
	CallerAddr                   []byte                                `protobuf:"bytes,4,opt,name=CallerAddr,proto3" json:"CallerAddr,omitempty"`
	CallerCallID                 []byte                                `protobuf:"bytes,5,opt,name=CallerCallID,proto3" json:"CallerCallID,omitempty"`
	CallbackAsyncInitiatorCallID []byte                                `protobuf:"bytes,6,opt,name=CallbackAsyncInitiatorCallID,proto3" json:"CallbackAsyncInitiatorCallID,omitempty"`
	Callback                     string                                `protobuf:"bytes,7,opt,name=Callback,proto3" json:"Callback,omitempty"`
	CallbackData                 []byte                                `protobuf:"bytes,8,opt,name=CallbackData,proto3" json:"CallbackData,omitempty"`
	GasPrice                     uint64                                `protobuf:"varint,9,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	GasAccumulated               uint64                                `protobuf:"varint,10,opt,name=GasAccumulated,proto3" json:"GasAccumulated,omitempty"`
	ReturnData                   []byte                                `protobuf:"bytes,11,opt,name=ReturnData,proto3" json:"ReturnData,omitempty"`
	AsyncCallGroups              []*arwen.SerializableAsyncCallGroup   `protobuf:"bytes,12,rep,name=asyncCallGroups,proto3" json:"asyncCallGroups,omitempty"`
	ChildResults                 *SerializableVMOutput                 `protobuf:"bytes,13,opt,name=ChildResults,proto3" json:"ChildResults,omitempty"`
	CallsCounter                 uint64                                `protobuf:"varint,14,opt,name=CallsCounter,proto3" json:"CallsCounter,omitempty"`
	TotalCallsCounter            uint64                                `protobuf:"varint,15,opt,name=TotalCallsCounter,proto3" json:"TotalCallsCounter,omitempty"`
	OutputAccounts               map[string]*SerializableOutputAccount `protobuf:"bytes,16,rep,name=OutputAccounts,proto3" json:"OutputAccounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeletedAccounts              [][]byte                              `protobuf:"bytes,17,rep,name=DeletedAccounts,proto3" json:"DeletedAccounts,omitempty"`
	TouchedAccounts              [][]byte                              `protobuf:"bytes,18,rep,name=TouchedAccounts,proto3" json:"TouchedAccounts,omitempty"`
	Logs                         *SerializableLogEntry                 `protobuf:"bytes,19,opt,name=Logs,proto3" json:"Logs,omitempty"`
}

func (x *SerializableAsyncContextProto) Reset() {
	*x = SerializableAsyncContextProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializableAsyncContextProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableAsyncContextProto) ProtoMessage() {}

func (x *SerializableAsyncContextProto) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableAsyncContextProto.ProtoReflect.Descriptor instead.
func (*SerializableAsyncContextProto) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{5}
}

func (x *SerializableAsyncContextProto) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetCallID() []byte {
	if x != nil {
		return x.CallID
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetCallType() SerializableCallType {
	if x != nil {
		return x.CallType
	}
	return SerializableCallType_DirectCall
}

func (x *SerializableAsyncContextProto) GetCallerAddr() []byte {
	if x != nil {
		return x.CallerAddr
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetCallerCallID() []byte {
	if x != nil {
		return x.CallerCallID
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetCallbackAsyncInitiatorCallID() []byte {
	if x != nil {
		return x.CallbackAsyncInitiatorCallID
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

func (x *SerializableAsyncContextProto) GetCallbackData() []byte {
	if x != nil {
		return x.CallbackData
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *SerializableAsyncContextProto) GetGasAccumulated() uint64 {
	if x != nil {
		return x.GasAccumulated
	}
	return 0
}

func (x *SerializableAsyncContextProto) GetReturnData() []byte {
	if x != nil {
		return x.ReturnData
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetAsyncCallGroups() []*arwen.SerializableAsyncCallGroup {
	if x != nil {
		return x.AsyncCallGroups
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetChildResults() *SerializableVMOutput {
	if x != nil {
		return x.ChildResults
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetCallsCounter() uint64 {
	if x != nil {
		return x.CallsCounter
	}
	return 0
}

func (x *SerializableAsyncContextProto) GetTotalCallsCounter() uint64 {
	if x != nil {
		return x.TotalCallsCounter
	}
	return 0
}

func (x *SerializableAsyncContextProto) GetOutputAccounts() map[string]*SerializableOutputAccount {
	if x != nil {
		return x.OutputAccounts
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetDeletedAccounts() [][]byte {
	if x != nil {
		return x.DeletedAccounts
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetTouchedAccounts() [][]byte {
	if x != nil {
		return x.TouchedAccounts
	}
	return nil
}

func (x *SerializableAsyncContextProto) GetLogs() *SerializableLogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_async_proto protoreflect.FileDescriptor

var file_async_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x1a, 0x0f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x61,
	0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x4d, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x61, 0x73, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x47,
	0x61, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xcc, 0x01, 0x0a, 0x1a,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61,
	0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61,
	0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x47, 0x61, 0x73, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x61, 0x0a, 0x19, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x22, 0xe8, 0x03,
	0x0a, 0x19, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x2e, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x13, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x13, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x0f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x1a, 0x66, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7c, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xf1, 0x07, 0x0a, 0x1d, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x08, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x43, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x43, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x42, 0x0a, 0x1c, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x1c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x61,
	0x73, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x47, 0x61, 0x73, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72,
	0x77, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0f,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x42, 0x0a, 0x0c, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x4d, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0c, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x0e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0f, 0x54,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x32,
	0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x4c, 0x6f,
	0x67, 0x73, 0x1a, 0x66, 0x0a, 0x13, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x72, 0x0a, 0x14, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f,
	0x75, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x53, 0x44, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x10, 0x03, 0x42, 0x0d,
	0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_async_proto_rawDescOnce sync.Once
	file_async_proto_rawDescData = file_async_proto_rawDesc
)

func file_async_proto_rawDescGZIP() []byte {
	file_async_proto_rawDescOnce.Do(func() {
		file_async_proto_rawDescData = protoimpl.X.CompressGZIP(file_async_proto_rawDescData)
	})
	return file_async_proto_rawDescData
}

var file_async_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_async_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_async_proto_goTypes = []interface{}{
	(SerializableCallType)(0),                // 0: contexts.SerializableCallType
	(*SerializableVMOutput)(nil),             // 1: contexts.SerializableVMOutput
	(*SerializableOutputTransfer)(nil),       // 2: contexts.SerializableOutputTransfer
	(*SerializableStorageUpdate)(nil),        // 3: contexts.SerializableStorageUpdate
	(*SerializableOutputAccount)(nil),        // 4: contexts.SerializableOutputAccount
	(*SerializableLogEntry)(nil),             // 5: contexts.SerializableLogEntry
	(*SerializableAsyncContextProto)(nil),    // 6: contexts.SerializableAsyncContextProto
	nil,                                      // 7: contexts.SerializableOutputAccount.StorageUpdatesEntry
	nil,                                      // 8: contexts.SerializableAsyncContextProto.OutputAccountsEntry
	(*arwen.SerializableAsyncCallGroup)(nil), // 9: arwen.SerializableAsyncCallGroup
}
var file_async_proto_depIdxs = []int32{
	0,  // 0: contexts.SerializableOutputTransfer.CallType:type_name -> contexts.SerializableCallType
	7,  // 1: contexts.SerializableOutputAccount.StorageUpdates:type_name -> contexts.SerializableOutputAccount.StorageUpdatesEntry
	2,  // 2: contexts.SerializableOutputAccount.OutputTransfers:type_name -> contexts.SerializableOutputTransfer
	0,  // 3: contexts.SerializableAsyncContextProto.CallType:type_name -> contexts.SerializableCallType
	9,  // 4: contexts.SerializableAsyncContextProto.asyncCallGroups:type_name -> arwen.SerializableAsyncCallGroup
	1,  // 5: contexts.SerializableAsyncContextProto.ChildResults:type_name -> contexts.SerializableVMOutput
	8,  // 6: contexts.SerializableAsyncContextProto.OutputAccounts:type_name -> contexts.SerializableAsyncContextProto.OutputAccountsEntry
	5,  // 7: contexts.SerializableAsyncContextProto.Logs:type_name -> contexts.SerializableLogEntry
	3,  // 8: contexts.SerializableOutputAccount.StorageUpdatesEntry.value:type_name -> contexts.SerializableStorageUpdate
	4,  // 9: contexts.SerializableAsyncContextProto.OutputAccountsEntry.value:type_name -> contexts.SerializableOutputAccount
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_async_proto_init() }
func file_async_proto_init() {
	if File_async_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_async_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializableVMOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializableOutputTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializableStorageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializableOutputAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializableLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializableAsyncContextProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_async_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_async_proto_goTypes,
		DependencyIndexes: file_async_proto_depIdxs,
		EnumInfos:         file_async_proto_enumTypes,
		MessageInfos:      file_async_proto_msgTypes,
	}.Build()
	File_async_proto = out.File
	file_async_proto_rawDesc = nil
	file_async_proto_goTypes = nil
	file_async_proto_depIdxs = nil
}
